/**

mixins

*/

// media query
@mixin mq($breakpoint: md) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// ie11 hack
@mixin ie11() {
  @media all and (-ms-high-contrast: none) {
    @content;
  }
}

// センタリングメソッド
@mixin center-method () {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

// flexbox 上下左右中央揃え
@mixin center-flex () {
  display: flex;
  align-items: center;
  justify-content: center;
}

// css3 force 3D
@mixin force3D() {
  transform: translate3d(0);
  backface-visibility: hidden;
}

// ビューポートに対するvwフォントサイズ取得
@function get-vw($size, $viewport: 350) {
  $rate: 100 / $viewport;

  @return $rate * $size * 1vw;
}

@mixin fontsize-vw($font_size: 12) {
  font-size: $font_size * 1px;
  font-size: get-vw($font_size);
}

// コンテナブレークポイント
@mixin container-breakpoint() {
  width: 100%;

  // @include mq (sm) {
  //   max-width: 540px;
  // }

  // md
  @include mq (md) {
    max-width: 720px;
  }
  // lg
  @include mq (lg) {
    max-width: 960px;
  }
  // xl
  @include mq (xl) {
    max-width: 1140px;
  }
}

// row 生成
@mixin make-row() {
  display: flex;
  flex-wrap: wrap;
  margin-right: 0 - $grid-gutter-width;
  margin-left: 0 - $grid-gutter-width;
}

// 指定数のグリッドカラム生成
@mixin make-col($size, $columns: 12) {
  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
  padding-left: $grid-gutter-width;
  padding-right: $grid-gutter-width;
}

@mixin make-col-ready() {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  min-height: 1px; // Prevent collapsing
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
}

// 指定数のカラムオフセット生成
@mixin make-col-offset($size, $columns: 12) {
  $num: $size / $columns;

  margin-left: if($num == 0, 0, percentage($num));
}

@mixin materialicons() {
  font-size: 0;
  opacity: 0;
  transition: opacity 0.3s ease;

  .wf-materialicons-n4-active & {
    opacity: 1;
    visibility: visible;
    font-family: $font-materialicon;
    font-size: 1em;
    font-weight: normal;
    font-style: normal;
    line-height: 1;
    display: inline-block;
    white-space: nowrap;
    letter-spacing: normal;
    text-transform: none;
    word-wrap: normal;
    direction: ltr;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: "liga";
  }
}

@mixin triangle($direction, $color: currentcolor, $size: 1em) {
  $size: $size/2;
  $transparent: rgba($color, 0);
  $opposite: (top:bottom, right:left, left:right, bottom:top);

  content: '';
  display: inline-block;
  width: 0;
  height: 0;
  border: $size solid $transparent;
  border-#{map-get($opposite, $direction)}-color: $color;
  margin-#{$direction}: -$size/2;
}
